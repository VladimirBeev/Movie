@model AllMoviesQueryModel;
@using MovieTickets.Web.ViewModels.Movie;

@{
	ViewBag.Title = "All Movies";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<form method="get">
	<div class="row content-center">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="Category"></label>
				<select asp-for="Category" class="form-control">
					<option value="0">All Movies</option>
					<option value="1">Action</option>
					<option value="2">Comedy</option>
					<option value="3">Drama</option>
					<option value="4">Documentary</option>
					<option value="5">Adventure</option>
					<option value="6">Fantasy</option>
					<option value="7">Horror</option>
					<option value="8">Romance</option>
					<option value="9">Thriller</option>
					<option value="10">Western</option>
				</select>
			</div>

			<div class="form-group">
				<label asp-for="MoviesPerPage"></label>
				<select asp-for="MoviesPerPage" class="form-control">
					<option value="3">3</option>
					<option value="6">6</option>
					<option value="9">9</option>
				</select>
			</div>
		</div>

		<div class="form-group col-md-3">
			<label asp-for="SearchString"></label>
			<input asp-for="SearchString" class="form-control" placeholder="...">
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="MovieSorting"></label>
				<select asp-for="MovieSorting" class="form-control">
					<option value="0">All</option>
					<option value="1">Newest</option>
					<option value="2">Oldest</option>
					<option value="3">Price (Ascending)</option>
					<option value="4">Price (Descending)</option>
				</select>
			</div>
		</div>

		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>


@{
	int previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	int maxPage = (int)Math.Ceiling((double)Model.TotalMovies /
		Model.MoviesPerPage);
}

<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-outline-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Movie"
		   asp-action="Filter"
		   asp-route-currentPage="@previousPage"
		   asp-route-category="@Model.Category"
		   asp-route-searchTerm="@Model.SearchString"
		   asp-route-sorting="@((int?)Model.MovieSorting)"><<</a>
	</div>

	@{
		bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
		!Model.AllMoviesViewModels.Any();
	}

	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-outline-primary @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Movie"
		   asp-action="Filter"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-category="@Model.Category"
		   asp-route-searchTerm="@Model.SearchString"
		   asp-route-sorting="@((int?)Model.MovieSorting)">>></a>
	</div>
</div>

@if (!Model.AllMoviesViewModels.Any())
{
	<h2 class="text-center">No houses found by the given criteria!</h2>
}

<div class="row">
	<partial name="AllMovies" model="@Model.AllMoviesViewModels" />
</div>