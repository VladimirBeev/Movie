@model ShoppingCartViewModel

@{
    ViewData["Title"] = "Shopping cart summary";
}

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">
            <h2>You shopping cart summary</h2>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Selected amount</th>
                    <th>Movie</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                {
                    <tr>
                        <td class="align-middle">@item.Amount</td>
                        <td class="align-middle">@item.Movie.Title</td>
                        <td class="align-middle">@item.Movie.Price.ToString("c")</td>
                        <td class="align-middle">@((item.Amount * item.Movie.Price).ToString("c"))</td>
                        <td class="align-middle">
                            <a class="text-danger" asp-controller="Order" asp-action="RemoveItemFromShoppingCart"
                               asp-route-id="@item.Movie.Id">
                                <i class="bi bi-cart-dash"></i>
                            </a>
                            |
                            <a class="text-success" asp-controller="Order" asp-action="AddItemToShoppingCart"
                               asp-route-id="@item.Movie.Id">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"></td>
                    <td><b>Total:</b></td>
                    <td>
                        @Model.ShoppingCartTotal.ToString("c")
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>

        <div class="container-fluid">
            @if (this.User.Identity.IsAuthenticated)
            {
                <a class="btn btn-outline-primary" asp-action="CompleteOrder">
                    Complete order
                </a>
                <a class="btn btn-outline-success" asp-controller="Movie" asp-action="AllMovies">
                    Add more items
                </a>
                <div class="float-end" id="paypal-button-container"></div>
            }
            else
            {
                <a class="btn btn-outline-success" asp-controller="Movie" asp-action="AllMovies">
                    Add more items
                </a>
                <a class="btn btn-outline-success float-end" asp-controller="Account" asp-action="Login">
                    Login
                </a>
            }
        </div>
    </div>
</div>

@section Scripts{

    <script src="https://www.paypal.com/sdk/js?client-id=test&currency=USD"></script>

    <script>

        paypal.Buttons({

            // Order is created on the server and the order id is returned

            createOrder() {

                return fetch("/my-server/create-paypal-order", {

                    method: "POST",

                    headers: {

                        "Content-Type": "application/json",

                    },

                    // use the "body" param to optionally pass additional order information

                    // like product skus and quantities

                    body: JSON.stringify({

                        cart: [

                            {

                                sku: "YOUR_PRODUCT_STOCK_KEEPING_UNIT",

                                quantity: "YOUR_PRODUCT_QUANTITY",

                            },

                        ],

                    }),

                })

                    .then((response) => response.json())

                    .then((order) => order.id);

            },

            // Finalize the transaction on the server after payer approval

            onApprove(data) {

                return fetch("/my-server/capture-paypal-order", {

                    method: "POST",

                    headers: {

                        "Content-Type": "application/json",

                    },

                    body: JSON.stringify({

                        orderID: data.orderID

                    })

                })

                    .then((response) => response.json())

                    .then((orderData) => {

                        // Successful capture! For dev/demo purposes:

                        console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));

                        const transaction = orderData.purchase_units[0].payments.captures[0];

                        alert(`Transaction ${transaction.status}: ${transaction.id}\n\nSee console for all available details`);

                        // When ready to go live, remove the alert and show a success message within this page. For example:

                        // const element = document.getElementById('paypal-button-container');

                        // element.innerHTML = '<h3>Thank you for your payment!</h3>';

                        // Or go to another URL:  window.location.href = 'thank_you.html';

                    });

            }

        }).render('#paypal-button-container');

    </script>
}